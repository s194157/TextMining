library(xgboost)
library(xgboost)
library(xgboost)
dane <- read.table("clipboard", sep = "\t", header = TRUE, dec = ",")
names(dane)
dim(dane)
View(dane)
summary(dane)
if(!require(psych)) install.packages("psych")
library(psych)
describe.by(dane[, -5], dane[, 5])
# Statystylki opisowe atrybutow w podziale na grupy dobrych i złych kredytobiorcow,
# empiryczne rozklady warunkowe względem kategorii zmiennej zależnej
describeby(dane[, -5], dane[, 5])
# Statystylki opisowe atrybutow w podziale na grupy dobrych i złych kredytobiorcow,
# empiryczne rozklady warunkowe względem kategorii zmiennej zależnej
describe.by(dane[, -5], dane[, 5])
describeBy(dane[, -5], dane[, 5])
plot(dane[, -5], col = dane[, 5])
levels(dane[, 5])
if(!require(rpart)) install.packages("rpart")
library(rpart)
if(!require(rpart.plot)) install.packages("rpart.plot")
library(xgboost)
library(xgboost)
library(readr)
library(stringr)
library(caret)
library(car)
describe.By(dane[, -5], dane[, 5])
install.packages("drat", repos="https://cran.rstudio.com")
drat:::addRepo("dmlc")
install.packages("xgboost", repos="http://dmlc.ml/drat/", type = "source")
install.packages("drat", repos="https://cran.rstudio.com")
drat:::addRepo("dmlc")
install.packages("xgboost", repos="http://dmlc.ml/drat/", type = "source")
install.packages("xgboost")
library(xgboost)
data(iris)
force(iris)
force(iris)
species = iris$Species
label = as.integer(iris$Species)-1
iris$Species = NULL
n = nrow(iris)
train.index = sample(n,floor(0.75*n))
train.data = as.matrix(iris[train.index,])
train.label = label[train.index]
test.data = as.matrix(iris[-train.index,])
test.label = label[-train.index]
xgb.train = xgb.DMatrix(data=train.data,label=train.label)
xgb.test = xgb.DMatrix(data=test.data,label=test.label)
num_class = length(levels(species))
params = list(
booster="gbtree",
eta=0.001,
max_depth=5,
gamma=3,
subsample=0.75,
colsample_bytree=1,
objective="multi:softprob",
eval_metric="mlogloss",
num_class=num_class
)
xgb.fit=xgb.train(
params=params,
data=xgb.train,
nrounds=10000,
nthreads=1,
early_stopping_rounds=10,
watchlist=list(val1=xgb.train,val2=xgb.test),
verbose=0
)
xgb.fit
xgb.pred = predict(xgb.fit,test.data,reshape=T)
xgb.pred = as.data.frame(xgb.pred)
colnames(xgb.pred) = levels(species)
xgb.pred$prediction = apply(xgb.pred,1,function(x) colnames(xgb.pred)[which.max(x)])
xgb.pred$label = levels(species)[test.label+1]
result = sum(xgb.pred$prediction==xgb.pred$label)/nrow(xgb.pred)
print(paste("Final Accuracy =",sprintf("%1.2f%%", 100*result)))
View(iris)
View(iris)
View(params)
View(params)
View(test.data)
View(train.data)
View(xgb.fit)
View(xgb.fit)
View(xgb.fit)
View(xgb.pred)
data(Glass)
library(RSNNS)
data(iris)
inputs.train <- iris.train[,1:4]
lev <- levels(iris.train[,5])
outputs.train <- decodeClassLabels(iris.train[,5])
data(Glass)
data(Soybean)
install.packages("tree")
library(rpart)
if(!require(tree)) install.packages("tree")
library(tree)
library(psych)
iris
summary(iris)
describe(iris)
plot(iris, col = iris[, 5])
plot(iris[, 3:4], col = iris[, 5], pch = 19, main = "d?ugosc p?atka/szerokosc p?atka")
ir.tr <- tree(Species ~ ., iris)
ir.tr
ir.tr1 <- snip.tree(ir.tr, nodes = c(12, 7))
summary(ir.tr1)
par(pty = "s")
plot(iris[, 3:4], col = iris[, 5], pch = 19, main = "d?ugosc p?atka/szerokosc p?atka")
View(ir.tr1)
View(ir.tr1)
View(ir.tr)
View(ir.tr)
partition.tree(ir.tr1, add = TRUE, cex = 1.5)
load("C:/Users/BartekO/PJN/TextMining/workspaces/2020_04_28.RData")
install.packages("topicmodels")
#włączenie bibliotek
library(lsa)
#zmiana katalogu roboczego
workDir <- "C:\\Users\\BartekO\\PJN\\TextMining"
setwd(workDir)
#lokalizacja katalogu ze skryptami
scriptsDir <- ".\\scripts"
#załadowanie skryptu
sourceFile <- paste(
scriptsDir,
"\\",
"frequency_matrix.R",
sep = ""
)
source(sourceFile)
#analiza ukrytych wymiarów semantycznych (dekompozycja wg wartości osobliwych)
lsa <- lsa(tdmTfidfBoundsMatrix)
lsa$tk #odpowiednik macierzy U, współrzędne wyrazów
lsa$dk #odpowiednik macierzy V, współrzędne dokumentów
lsa$sk #odpowiednik macierzy D, znaczenie składowych
#przygotowanie współrzędnych do wykresu
coordDocs <- lsa$dk%*%diag(lsa$sk)
coordTerms <- lsa$tk%*%diag(lsa$sk)
words <- c("harry", "czarodziej", "dumbledore", "hermiona", "ron", "komnata", "powiedzieć", "chcieć", "dowiadywać", "albus", "syriusz", "lupin", "umbridge", "edmund", "kaspian", "łucja", "czarownica", "piotr", "zuzanna", "aslana", "narnii", "baron", "dziecko", "wyspa", "bell", "edward", "wampir", "jacob")
termsImportance <- diag(coordTerms%*%t(diag(lsa$sk))%*%t(lsa$tk))
importantWords <- names(tail(sort(termsImportance), 25))
coordWords <- coordTerms[importantWords,]
x1 <- coordDocs[,1]
y1 <- coordDocs[,2]
x2 <- coordWords[,1]
y2 <- coordWords[,2]
#przygotowanie legendy
legend <- paste(
paste("d", 1:length(rownames(coordDocs)),sep = ""),
rownames(coordDocs),
sep = "<-"
)
#wykres dokumentów w przestrzeni dwuwymiarowej
plot(
x1,
y1,
#xlim = c(-0.02,-0.01),
#ylim = c(-0.05,0.05),
xlab="Współrzędna syntetyczna 1",
ylab="Współrzędna syntetyczna 2",
main="Analiza ukrytych wymiarów sematycznych",
col = "orange"
)
text(
x1,
y1,
labels = paste("d", 1:length(rownames(coordDocs)),sep = ""),
pos = 4,
col = "orange"
)
points(
x2,
y2,
pch = 2,
col = "brown"
)
text(
x2,
y2,
labels = rownames(coordWords),
pos = 4,
col = "brown"
)
legend("bottomleft", legend, cex=.6, text.col = "orange")
#eksport wykresu do pliku .png
plotFile <- paste(
outputDir,
"\\",
"lsa.png",
sep = ""
)
png(file = plotFile)
plot(
x1,
y1,
#xlim = c(-0.02,-0.01),
#ylim = c(-0.05,0.05),
xlab="Współrzędna syntetyczna 1",
ylab="Współrzędna syntetyczna 2",
main="Analiza ukrytych wymiarów sematycznych",
col = "orange"
)
text(
x1,
y1,
labels = paste("d", 1:length(rownames(coordDocs)),sep = ""),
pos = 4,
col = "orange"
)
points(
x2,
y2,
pch = 2,
col = "brown"
)
text(
x2,
y2,
labels = rownames(coordWords),
pos = 4,
col = "brown"
)
legend("bottomleft", legend, cex=.5, text.col = "orange")
dev.off()
#włączenie bibliotek
library(topicmodels)
#zmiana katalogu roboczego
workDir <- "C:\\Users\\BartekO\\PJN\\TextMining"
setwd(workDir)
#lokalizacja katalogu ze skryptami
scriptsDir <- ".\\scripts"
#załadowanie skryptu
sourceFile <- paste(
scriptsDir,
"\\",
"frequency_matrix.R",
sep = ""
)
source(sourceFile)
#analiza ukrytej alokacji Dirichlet'a
nWords <- ncol(dtmTfAll)
nTopics <- 5
lda <- LDA(
dtmTfAll,
k = nTopics,
method = "Gibbs",
control = list(
burnin = 2000,
thin = 100,
iter = 3000
)
)
perplexity <- perplexity(lda, dtmTfAll)
results <- posterior(lda)
#prezentacja tematów
par(mai = c(1,2,1,1))
topic1 <- head(sort(results$terms[1,], decreasing = TRUE), 20)
barplot(
rev(topic1),
horiz = TRUE,
las = 1,
main = "Temat 1",
xlab = "Prawdopodobieństwo",
col = "orange"
)
topic2 <- head(sort(results$terms[2,], decreasing = TRUE), 20)
barplot(
rev(topic2),
horiz = TRUE,
las = 1,
main = "Temat 2",
xlab = "Prawdopodobieństwo",
col = "turquoise"
)
topic3 <- head(sort(results$terms[3,], decreasing = TRUE), 20)
barplot(
rev(topic3),
horiz = TRUE,
las = 1,
main = "Temat 3",
xlab = "Prawdopodobieństwo",
col = "violet"
)
topic4 <- head(sort(results$terms[4,], decreasing = TRUE), 20)
barplot(
rev(topic4),
horiz = TRUE,
las = 1,
main = "Temat 4",
xlab = "Prawdopodobieństwo",
col = "lightskyblue"
)
topic5 <- head(sort(results$terms[5,], decreasing = TRUE), 20)
barplot(
rev(topic5),
horiz = TRUE,
las = 1,
main = "Temat 5",
xlab = "Prawdopodobieństwo",
col = "darkseagreen"
)
#prezentacja dokumentów
document4 <- results$topics[4,]
barplot(
rev(document4),
horiz = TRUE,
las = 1,
main = rownames(results$topics)[4],
xlab = "Prawdopodobieństwo",
col = "orange"
)
document11 <- results$topics[11,]
barplot(
rev(document11),
horiz = TRUE,
las = 1,
main = rownames(results$topics)[11],
xlab = "Prawdopodobieństwo",
col = "turquoise"
)
document17 <- results$topics[17,]
barplot(
rev(document17),
horiz = TRUE,
las = 1,
main = rownames(results$topics)[17],
xlab = "Prawdopodobieństwo",
col = "violet"
)
#udział tematów w słowach
words1<- c("czarodziej", "czarownica", "wampir")
round(results$terms[,words1],2)
words2<- c("harry", "łucja", "bell")
round(results$terms[,words2],2)
save.image("C:/Users/BartekO/PJN/TextMining/workspaces/2020_05_12.RData")
